        DeviceEvents
        | where ActionType == "UsbDriveMounted"
        | extend DriveLetter = tostring(todynamic(AdditionalFields).DriveLetter)
        | extend InitiatingProcessAccountUpn = tolower(InitiatingProcessAccountUpn)
        | extend DeviceName = tolower(DeviceName)
        | extend DeviceName = tostring(split(DeviceName, ".")[0])
        | project USBMountTime = TimeGenerated, DeviceId, AdditionalFields, DeviceName, InitiatingProcessAccountUpn, DriveLetter
        | join kind=inner  (
        SecurityAlert
        | where ProviderName == "MDATP"
        | extend Category =tostring(parse_json(ExtendedProperties).["MicrosoftDefenderAtp.Category"])
        | where Category  has_any ( "Malware", "Unwanted", "Ransomware")
        | extend CompromisedEntity = tolower(CompromisedEntity)
        | extend CompromisedEntity = tostring(split(CompromisedEntity, ".")[0])
        | extend ThreatName= parse_json(ExtendedProperties).ThreatName
        | extend Entities1 = Entities
        | mv-expand parse_json(Entities1)
        | extend MdatpDeviceId = tostring(parse_json(Entities1).MdatpDeviceId)
        | extend SHA1 = tostring(parse_json(tostring(parse_json(Entities)[0].FileHashes))[0].Value)
        | where isnotempty( MdatpDeviceId)
        | extend ThreatName= extract(@"^(.*):", 1, tostring(parse_json(ExtendedProperties).ThreatName))
        | extend DeviceDefenderLink = strcat(@"https://security.microsoft.com/machines/", MdatpDeviceId)
        | extend AlertDriveLetter = extract(@"^(.:)", 1, tostring(parse_json(tostring(parse_json(Entities)[0].Directory))))
        )
        on $left.DeviceName == $right.CompromisedEntity
        | where (TimeGenerated - USBMountTime) between (0min .. 60min) and USBMountTime < TimeGenerated
        | where DriveLetter == AlertDriveLetter
        | summarize arg_max(TimeGenerated,*) by SystemAlertId